#web服务器配置
server.context-path=/chinafet
server.port=80
#最大线程数
server.tomcat.max-threads=300
#编码
server.tomcat.uri-encoding=UTF-8


# 日志相关配置
logging.config=classpath:logback.xml
#########################################################################
# 数据库配置项 #
#########################################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://114.80.211.26:3306/sq_chinafet?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=sq_chinafet
spring.datasource.password=chinafet
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.minIdle=2
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=300
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true



#########################################################################
# mybatis 配置项 #
#########################################################################
mybatis.config-locations=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/*.xml



rsa.key.path=E:/work/demo/spring-boot-demo/src/main/resources/key.cer

#rsa.key.path=/var/www/virtual/chinafet/webapps/chinafet/WEB-INF/classes/key.cer
